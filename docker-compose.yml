version: "3.8"

services:
  # Databases
  ms_event_db:
    image: postgres
    container_name: ms_event_db
    ports:
      - "54321:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./pg_data-event:/var/lib/postgresql/data

  ms_teams_db:
    image: postgres
    container_name: ms_teams_db
    ports:
      - "54322:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./pg_data-teams:/var/lib/postgresql/data

  ms_users_db:
    image: postgres
    container_name: ms_users_db
    ports:
      - "54323:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./pg_data-users/var/lib/postgresql/data

  ms_notifications_db:
    image: postgres
    container_name: ms_notifications_db
    ports:
      - "54324:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./pg_data-notifications:/var/lib/postgresql/data

  # Web Apps
  ms_event:
    build: ./ms_event
    container_name: ms_event
    ports:
      - "16010:16010"
    depends_on:
      - ms_event_db
    restart: always
    environment:
      - SERVICE_TYPE=service

  ms_teams:
    build: ./ms_teams
    container_name: ms_teams
    ports:
      - "16020:16020"
    depends_on:
      - ms_teams_db
    restart: always
    environment:
      - SERVICE_TYPE=service

  ms_users:
    build: ./ms_users
    container_name: ms_users
    ports:
      - "16030:16030"
    depends_on:
      - ms_users_db
    restart: always
    environment:
      - SERVICE_TYPE=service

  ms_notifications:
    build: ./ms_notifications
    container_name: ms_notifications
    ports:
      - "16040:16040"
    depends_on:
      - ms_notifications_db
    restart: always
    environment:
      - SERVICE_TYPE=service

  ms_telegram:
    build: ./ms_telegram
    container_name: ms_telegram
    restart: always

  # Consumers
  ms_event_consumer:
    build: ./ms_event
    container_name: ms_event_consumer
    depends_on:
      - ms_event
    restart: always
    environment:
      - SERVICE_TYPE=consumer

  ms_teams_consumer:
    build: ./ms_teams
    container_name: ms_teams_consumer
    depends_on:
      - ms_teams
    restart: always
    environment:
      - SERVICE_TYPE=consumer

  ms_notifications_consumer:
    build: ./ms_notifications
    container_name: ms_notifications_consumer
    depends_on:
      - ms_notifications
    restart: always
    environment:
      - SERVICE_TYPE=consumer

  # Proxy
  nginx-proxy:
    build: ./proxy
    container_name: nginx-proxy
    depends_on:
      - ms_event
      - ms_teams
      - ms_users
      - ms_notifications
      - rabbitmq
    ports:
      - "80:80"
      - "443:443"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # Expose port 5672 for AMQP
      - "15672:15672" # Expose port 15672 for RabbitMQ management
    environment:
      - RABBITMQ_DEFAULT_USER=manuscript # Set RabbitMQ username
      - RABBITMQ_DEFAULT_PASS=manuscript # Set RabbitMQ password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia # Mount a volume for persistent data

volumes:
  pg_data-event:
  pg_data-users:
  pg_data-teams:
  pg_data-notifications:
  rabbitmq_data:
